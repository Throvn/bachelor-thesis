


--------------------------------------------------
Starting lstm.py at '2024-10-11 00:39:40.617790'.
Reading './isDaoActiveData(4).json'... Done.
Total training Data: 379
Size of training set: 265
Size of test set: 114
Preparing data for training...
	Creating sequence for 'chiliz'... Done.
	Creating sequence for 'alphabet-erc404'... Done.
	Creating sequence for 'across-protocol'... Done.
	Creating sequence for 'clore-ai'... Done.
	Creating sequence for 'alchemist'... Done.
	Creating sequence for 'cnns'... Done.
	Creating sequence for 'bnktothefuture'... Done.
	Creating sequence for 'cornucopias'... Done.
	Creating sequence for 'aave-busd'... Skipped.
	Creating sequence for 'base-protocol'... Done.
	Creating sequence for 'algorand'... Done.
	Creating sequence for '0x0-ai-ai-smart-contract'... Done.
	Creating sequence for 'bytom'... Done.
	Creating sequence for 'as-roma-fan-token'... Done.
	Creating sequence for 'cajutel'... Done.
	Creating sequence for 'chainbing'... Done.
	Creating sequence for 'calcium'... Done.
	Creating sequence for 'belt'... Done.
	Creating sequence for 'baasid'... Done.
	Creating sequence for 'cobak-token'... Done.
	Creating sequence for 'agatech'... Done.
	Creating sequence for 'clearpool'... Done.
	Creating sequence for 'bridge-mutual'... Done.
	Creating sequence for 'bitget-wallet-token'... Done.
	Creating sequence for 'chainx'... Done.
	Creating sequence for 'anyswap'... Done.
	Creating sequence for 'botto'... Done.
	Creating sequence for 'bitcoin'... Done.
	Creating sequence for 'centrifuge'... Done.
	Creating sequence for 'basis-cash'... Done.
	Creating sequence for 'bolt'... Done.
	Creating sequence for 'creo-engine'... Done.
	Creating sequence for 'band-protocol'... Done.
	Creating sequence for 'celestia'... Done.
	Creating sequence for 'antimatter'... Done.
	Creating sequence for 'bistroo'... Done.
	Creating sequence for 'aipad'... Done.
	Creating sequence for 'bidao'... Done.
	Creating sequence for 'bitmart-token'... Done.
	Creating sequence for 'blocknet'... Done.
	Creating sequence for 'aviator'... Done.
	Creating sequence for 'ark'... Done.
	Creating sequence for 'bifrost'... Done.
	Creating sequence for 'assemble-protocol'... Done.
	Creating sequence for 'aergo'... Done.
	Creating sequence for 'artrade'... Done.
	Creating sequence for 'access-protocol'... Done.
	Creating sequence for 'aurusx'... Done.
	Creating sequence for 'affyn'... Done.
	Creating sequence for 'adapad'... Done.
	Creating sequence for 'crypto-asset-governance-alliance'... Done.
	Creating sequence for 'compound-basic-attention-token'... Done.
	Creating sequence for 'aave-usdt'... Skipped.
	Creating sequence for 'apy-finance'... Done.
	Creating sequence for 'arweave'... Done.
	Creating sequence for 'ageofgods'... Done.
	Creating sequence for 'biswap'... Done.
	Creating sequence for 'dafi-protocol'... Done.
	Creating sequence for 'biconomy'... Done.
	Creating sequence for 'cumrocket'... Done.
	Creating sequence for 'beoble'... Done.
	Creating sequence for 'apm-coin'... Done.
	Creating sequence for 'bottos'... Done.
	Creating sequence for 'aave-usdc'... Skipped.
	Creating sequence for 'bullperks'... Done.
	Creating sequence for 'bittorrent'... Done.
	Creating sequence for 'aurory'... Done.
	Creating sequence for 'acala'... Done.
	Creating sequence for 'banano'... Done.
	Creating sequence for 'aston-martin-cognizant-fan-token'... Done.
	Creating sequence for 'argent'... Skipped.
	Creating sequence for 'celo-dollar'... Done.
	Creating sequence for 'blendr-network'... Done.
	Creating sequence for 'adamant-messenger'... Done.
	Creating sequence for 'compound-ether'... Done.
	Creating sequence for 'cloudbric'... Done.
	Creating sequence for 'achain'... Done.
	Creating sequence for 'ben-the-dog'... Done.
	Creating sequence for 'arkham'... Done.
	Creating sequence for 'cellframe'... Done.
	Creating sequence for 'basic-attention-token'... Done.
	Creating sequence for 'connex'... Done.
	Creating sequence for 'coinsbit-token'... Done.
	Creating sequence for 'chronicle'... Done.
	Creating sequence for 'dacxi'... Done.
	Creating sequence for 'arcs'... Done.
	Creating sequence for 'billionhappiness'... Done.
	Creating sequence for 'burger-swap'... Done.
	Creating sequence for '1inch'... Done.
	Creating sequence for 'binance-usd'... Done.
	Creating sequence for 'beyond-finance'... Done.
	Creating sequence for 'binemon'... Done.
	Creating sequence for 'b20'... Done.
	Creating sequence for 'bemo-staked-ton'... Done.
	Creating sequence for 'aeron'... Done.
	Creating sequence for 'coldstack'... Done.
	Creating sequence for 'brz'... Done.
	Creating sequence for 'blockstack'... Done.
	Creating sequence for 'bamboo-defi'... Done.
	Creating sequence for 'astroswap'... Done.
	Creating sequence for 'barnbridge'... Done.
	Creating sequence for 'bitcoin-wizards'... Done.
	Creating sequence for 'commune-ai'... Done.
	Creating sequence for 'alva'... Done.
	Creating sequence for 'balpha'... Done.
	Creating sequence for 'cardano'... Done.
	Creating sequence for 'alvey-chain'... Done.
	Creating sequence for 'adreward'... Done.
	Creating sequence for 'acorn-protocol'... Done.
	Creating sequence for 'bitcoin-cash'... Done.
	Creating sequence for 'bazaars'... Done.
	Creating sequence for 'cere-network'... Done.
	Creating sequence for 'bnsd-finance'... Done.
	Creating sequence for 'bitball-treasure'... Done.
	Creating sequence for 'airight'... Done.
	Creating sequence for 'auto'... Done.
	Creating sequence for 'comtech-gold'... Done.
	Creating sequence for 'bluzelle'... Done.
	Creating sequence for 'bitkub-coin'... Done.
	Creating sequence for 'aston-villa-fan-token'... Done.
	Creating sequence for 'crash-on-base'... Done.
	Creating sequence for 'aeon'... Done.
	Creating sequence for 'alchemix'... Done.
	Creating sequence for 'bitball'... Done.
	Creating sequence for 'beefy-finance'... Done.
	Creating sequence for 'calamari-network'... Done.
	Creating sequence for 'crown-by-third-time-games'... Done.
	Creating sequence for 'apeswap-finance'... Done.
	Creating sequence for 'ait-protocol'... Done.
	Creating sequence for 'ampleforth-governance-token'... Done.
	Creating sequence for 'aion'... Done.
	Creating sequence for 'autonio'... Done.
	Creating sequence for 'airtor-protocol'... Done.
	Creating sequence for 'acquire-fi'... Done.
	Creating sequence for 'aptos'... Done.
	Creating sequence for 'cyberfi'... Done.
	Creating sequence for 'carvertical'... Done.
	Creating sequence for 'captain-tsubasa'... Done.
	Creating sequence for 'bitcoin-diamond'... Done.
	Creating sequence for 'bitcoin-gold'... Done.
	Creating sequence for 'cotrader'... Done.
	Creating sequence for 'coin98'... Done.
	Creating sequence for 'convex-finance'... Done.
	Creating sequence for 'alpine-f1-team-fan-token'... Done.
	Creating sequence for 'ampleforth'... Done.
	Creating sequence for 'airswap'... Done.
	Creating sequence for 'aerodrome-finance'... Done.
	Creating sequence for 'blackcardcoin'... Done.
	Creating sequence for 'ambo'... Skipped.
	Creating sequence for 'bepro-network'... Done.
	Creating sequence for 'azuki'... Done.
	Creating sequence for 'aioz-network'... Done.
	Creating sequence for 'astar'... Done.
	Creating sequence for 'augur'... Done.
	Creating sequence for 'adshares'... Done.
	Creating sequence for 'ceres'... Done.
	Creating sequence for 'constitutiondao'... Done.
	Creating sequence for 'aragon'... Done.
	Creating sequence for 'areon-network'... Done.
	Creating sequence for 'ai-analysis-token'... Done.
	Creating sequence for 'armor'... Done.
	Creating sequence for 'bitshares'... Done.
	Creating sequence for 'cryptozoon'... Done.
	Creating sequence for 'bitdao'... Done.
	Creating sequence for 'convergence'... Done.
	Creating sequence for 'contentos'... Done.
	Creating sequence for 'alitas'... Done.
	Creating sequence for 'akita-inu'... Done.
	Creating sequence for 'aeternity'... Done.
	Creating sequence for 'brainlet'... Skipped.
	Creating sequence for 'bread'... Done.
	Creating sequence for 'contentbox'... Done.
	Creating sequence for 'bad-idea-ai'... Done.
	Creating sequence for 'crypto-ai-robo'... Done.
	Creating sequence for 'blind-boxes'... Done.
	Creating sequence for 'beam'... Done.
	Creating sequence for 'alien-worlds'... Done.
	Creating sequence for 'banana-gun'... Done.
	Creating sequence for 'aave-mana'... Skipped.
	Creating sequence for 'amino'... Done.
	Creating sequence for 'cashaa'... Done.
	Creating sequence for 'catcoin'... Done.
	Creating sequence for 'birake'... Done.
	Creating sequence for 'altered-state-token'... Done.
	Creating sequence for 'bonfida'... Done.
	Creating sequence for 'bakerytoken'... Done.
	Creating sequence for 'aave-link'... Skipped.
	Creating sequence for 'credefi'... Done.
	Creating sequence for 'bella-protocol'... Done.
	Creating sequence for 'ardor'... Done.
	Creating sequence for 'acknoledger'... Done.
	Creating sequence for 'cryptogpt'... Done.
	Creating sequence for 'civic'... Done.
	Creating sequence for 'bifi'... Done.
	Creating sequence for 'axelar'... Done.
	Creating sequence for 'amepay'... Done.
	Creating sequence for 'clube-atletico-mineiro-fan-token'... Done.
	Creating sequence for 'cyclone-protocol'... Done.
	Creating sequence for 'apenft'... Done.
	Creating sequence for 'celo'... Done.
	Creating sequence for 'coinweb'... Done.
	Creating sequence for 'concordium'... Done.
	Creating sequence for 'chex-token'... Done.
	Creating sequence for 'coinex-token'... Done.
	Creating sequence for 'appcoins'... Done.
	Creating sequence for 'boba-network'... Done.
	Creating sequence for 'arcona'... Done.
	Creating sequence for 'azuro-protocol'... Done.
	Creating sequence for 'aave-tusd'... Skipped.
	Creating sequence for 'babb'... Done.
	Creating sequence for 'cult-dao'... Done.
	Creating sequence for 'avail'... Skipped.
	Creating sequence for 'amond'... Done.
	Creating sequence for 'akash-network'... Done.
	Creating sequence for 'bitcicoin'... Done.
	Creating sequence for 'aave-knc'... Skipped.
	Creating sequence for '0x'... Done.
	Creating sequence for 'billy'... Done.
	Creating sequence for 'bbs-network'... Done.
	Creating sequence for 'atlas-navi'... Done.
	Creating sequence for 'api3'... Done.
	Creating sequence for 'andy-on-sol'... Done.
	Creating sequence for 'credits'... Done.
	Creating sequence for '5ire'... Done.
	Creating sequence for 'aethir'... Done.
	Creating sequence for 'axie-infinity'... Done.
	Creating sequence for 'compound-uniswap'... Done.
	Creating sequence for 'beta-finance'... Done.
	Creating sequence for 'blockasset'... Done.
	Creating sequence for 'art-de-finance'... Done.
	Creating sequence for '3space-art'... Done.
	Creating sequence for 'carry'... Done.
	Creating sequence for 'amber'... Done.
	Creating sequence for 'alephium'... Done.
	Creating sequence for 'bibox-token'... Done.
	Creating sequence for 'boson-protocol'... Done.
	Creating sequence for 'arcblock'... Done.
	Creating sequence for 'circuits-of-value'... Done.
	Creating sequence for 'book-of-meme'... Done.
	Creating sequence for 'aventus'... Done.
	Creating sequence for 'adappter-token'... Done.
	Creating sequence for '404aliens'... Done.
	Creating sequence for 'cratos'... Done.
	Creating sequence for 'cartesi'... Done.
	Creating sequence for 'choise'... Done.
	Creating sequence for 'amaterasu-omikami'... Done.
	Creating sequence for 'adventure-gold'... Done.
	Creating sequence for 'celer-network'... Done.
	Creating sequence for 'bitpanda-ecosystem-token'... Done.
	Creating sequence for 'celo-euro'... Done.
	Creating sequence for 'bomb'... Done.
	Creating sequence for 'cosmos'... Done.
	Creating sequence for 'cudos'... Done.
	Creating sequence for 'bora'... Done.
	Creating sequence for 'altlayer'... Done.
	Creating sequence for 'aave-dai'... Skipped.
	Creating sequence for 'aimalls'... Done.
	Creating sequence for 'bitrock'... Done.
	Creating sequence for 'acute-angle-cloud'... Done.
	Creating sequence for 'blocery'... Done.
	Creating sequence for 'beamswap'... Done.
	Creating sequence for 'alkimi'... Done.
	Creating sequence for 'attila'... Done.
	Creating sequence for 'brickken'... Done.
	Creating sequence for 'alethea-artificial-liquid-intelligence-token'... Done.
Preparing data for testing...
	Creating sequence for 'cetus-protocol'... Done.
	Creating sequence for 'aave-snx'... Skipped.
	Creating sequence for 'axel'... Done.
	Creating sequence for 'bao-finance'... Done.
	Creating sequence for 'babyswap'... Done.
	Creating sequence for 'blockchain-monster-hunt'... Done.
	Creating sequence for 'conun'... Done.
	Creating sequence for 'brn-metaverse'... Done.
	Creating sequence for 'berry-data'... Done.
	Creating sequence for 'aave-bat'... Skipped.
	Creating sequence for 'ankr'... Done.
	Creating sequence for 'bondly'... Done.
	Creating sequence for 'cryptofranc'... Done.
	Creating sequence for 'crowns'... Done.
	Creating sequence for 'bosagora'... Done.
	Creating sequence for 'bobo-coin'... Done.
	Creating sequence for 'coinfi'... Done.
	Creating sequence for 'crvusd'... Done.
	Creating sequence for '88mph'... Done.
	Creating sequence for '0chain'... Done.
	Creating sequence for 'autonolas'... Done.
	Creating sequence for 'byte'... Done.
	Creating sequence for 'corite'... Done.
	Creating sequence for 'breederdao'... Done.
	Creating sequence for 'coti'... Done.
	Creating sequence for 'blockv'... Done.
	Creating sequence for 'aurora-near'... Done.
	Creating sequence for 'audius'... Done.
	Creating sequence for 'cropbytes'... Done.
	Creating sequence for 'cheems'... Done.
	Creating sequence for 'conceal'... Done.
	Creating sequence for 'ariva'... Done.
	Creating sequence for 'blockchain-certified-data-token'... Done.
	Creating sequence for 'auctus'... Done.
	Creating sequence for 'bitcoin-atom'... Done.
	Creating sequence for 'aave-mkr'... Skipped.
	Creating sequence for 'alchemy-pay'... Done.
	Creating sequence for 'befe'... Done.
	Creating sequence for 'archloot'... Done.
	Creating sequence for 'aelf'... Done.
	Creating sequence for 'arsenal-fan-token'... Done.
	Creating sequence for 'cookie'... Done.
	Creating sequence for 'counterparty'... Done.
	Creating sequence for 'binamon'... Done.
	Creating sequence for 'blast'... Done.
	Creating sequence for 'coinpoker'... Done.
	Creating sequence for 'cvault-finance'... Done.
	Creating sequence for 'alpaca-finance'... Done.
	Creating sequence for 'aigentx'... Done.
	Creating sequence for 'bouncebit'... Done.
	Creating sequence for 'balancer'... Done.
	Creating sequence for 'cindicator'... Done.
	Creating sequence for 'altava'... Done.
	Creating sequence for 'clintex-cti'... Done.
	Creating sequence for 'anchor-protocol'... Done.
	Creating sequence for 'aave'... Done.
	Creating sequence for 'daex'... Done.
	Creating sequence for 'carbon-browser'... Done.
	Creating sequence for 'blazestake-staked-sol'... Done.
	Creating sequence for 'city-tycoon-games'... Done.
	Creating sequence for 'aura-finance'... Done.
	Creating sequence for 'cryptoblades'... Done.
	Creating sequence for 'atlas-protocol'... Done.
	Creating sequence for 'covesting'... Done.
	Creating sequence for 'boringdao'... Done.
	Creating sequence for 'coreum'... Done.
	Creating sequence for 'bald'... Done.
	Creating sequence for 'cryptex-finance'... Done.
	Creating sequence for 'daddy-tate'... Done.
	Creating sequence for 'catheon-gaming'... Done.
	Creating sequence for 'aave-susd'... Skipped.
	Creating sequence for 'cargox'... Done.
	Creating sequence for 'bone-shibaswap'... Done.
	Creating sequence for 'cortex'... Done.
	Creating sequence for 'contracoin'... Done.
	Creating sequence for 'bittensor'... Done.
	Creating sequence for 'big-time'... Done.
	Creating sequence for 'aurora'... Done.
	Creating sequence for 'aryacoin'... Done.
	Creating sequence for 'allianceblock-nexera'... Done.
	Creating sequence for 'alanyaspor-fan-token'... Done.
	Creating sequence for 'curate'... Done.
	Creating sequence for '8pay'... Done.
	Creating sequence for 'big-data-protocol'... Done.
	Creating sequence for 'coinbase-wrapped-staked-eth'... Done.
	Creating sequence for 'analos'... Done.
	Creating sequence for 'coreto'... Done.
	Creating sequence for 'blox'... Done.
	Creating sequence for 'avinoc'... Done.
	Creating sequence for 'bitcore'... Done.
	Creating sequence for 'akropolis'... Done.
	Creating sequence for 'compound-0x'... Done.
	Creating sequence for 'bird-money'... Done.
	Creating sequence for 'apyswap'... Done.
	Creating sequence for 'aave-wbtc'... Skipped.
	Creating sequence for 'bridge-oracle'... Done.
	Creating sequence for 'ancient8'... Done.
	Creating sequence for 'catman'... Done.
	Creating sequence for 'astrotools'... Done.
	Creating sequence for 'azbit'... Done.
	Creating sequence for 'aave-zrx'... Skipped.
	Creating sequence for 'cybervein'... Done.
	Creating sequence for 'bscpad'... Done.
	Creating sequence for 'ally'... Done.
	Creating sequence for 'ambire-wallet'... Done.
	Creating sequence for 'amazy'... Done.
	Creating sequence for 'cyberconnect'... Done.
	Creating sequence for 'covalent'... Done.
	Creating sequence for 'cypherium'... Done.
	Creating sequence for 'bancor'... Done.
	Creating sequence for 'blockbank'... Done.
	Creating sequence for 'crabada'... Done.
	Creating sequence for 'beyond-protocol'... Done.
	Creating sequence for 'axis-defi'... Done.
Actual training set: 253 entries
Actual testing set:  108 entries
Actual training/total ratio: 0.6675461741424802
Parameters:
	Num epochs: 60
	Initial learning rate: 0.001
	Patience: 12
	Window size: 60
	Timeseries splits: 3
	Minimum number of timeseries datapoints: 64
Gradient boosting params: 
	{"max_depth": 3, "learning_rate": 0.05, "n_estimators": 100, "objective": "binary:logistic", "eval_metric": "logloss", "use_label_encoder": false}
Training group 0, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([464]))
	Y Val Labels:(array([1.], dtype=float32), array([463]))
Training group 0, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([927]))
	Y Val Labels:(array([1.], dtype=float32), array([463]))
Training group 0, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1390]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([352, 111]))
Training group 1, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([0.], dtype=float32), array([33]))
	Y Val Labels:(array([0.], dtype=float32), array([33]))
Training group 1, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0.], dtype=float32), array([66]))
	Y Val Labels:(array([0.], dtype=float32), array([33]))
Training group 1, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0.], dtype=float32), array([99]))
	Y Val Labels:(array([0.], dtype=float32), array([33]))
Training group 2, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([154]))
	Y Val Labels:(array([1.], dtype=float32), array([151]))
Training group 2, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([305]))
	Y Val Labels:(array([1.], dtype=float32), array([151]))
Training group 2, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([456]))
	Y Val Labels:(array([1.], dtype=float32), array([151]))
Training group 3, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([108]))
	Y Val Labels:(array([1.], dtype=float32), array([105]))
Training group 3, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([213]))
	Y Val Labels:(array([1.], dtype=float32), array([105]))
Training group 3, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([318]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([30, 75]))
Training group 4, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([291]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([199,  90]))
Training group 4, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([199, 381]))
	Y Val Labels:(array([0.], dtype=float32), array([289]))
Training group 4, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([488, 381]))
	Y Val Labels:(array([0.], dtype=float32), array([289]))
Training group 5, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([466]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([ 50, 416]))
Training group 5, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([ 50, 882]))
	Y Val Labels:(array([0.], dtype=float32), array([466]))
Training group 5, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([516, 882]))
	Y Val Labels:(array([0.], dtype=float32), array([466]))
Training group 6, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([582]))
	Y Val Labels:(array([1.], dtype=float32), array([579]))
Training group 6, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1161]))
	Y Val Labels:(array([1.], dtype=float32), array([579]))
Training group 6, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1740]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([575,   4]))
Training group 7, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([242]))
	Y Val Labels:(array([1.], dtype=float32), array([239]))
Training group 7, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([481]))
	Y Val Labels:(array([1.], dtype=float32), array([239]))
Training group 7, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([720]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([139, 100]))
Training group 9, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([333]))
	Y Val Labels:(array([1.], dtype=float32), array([333]))
Training group 9, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([666]))
	Y Val Labels:(array([1.], dtype=float32), array([333]))
Training group 9, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([999]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([146, 187]))
Training group 10, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([468]))
	Y Val Labels:(array([1.], dtype=float32), array([465]))
Training group 10, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([933]))
	Y Val Labels:(array([1.], dtype=float32), array([465]))
Training group 10, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1398]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([408,  57]))
Training group 11, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([138]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([74, 61]))
Training group 11, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([ 74, 199]))
	Y Val Labels:(array([0.], dtype=float32), array([135]))
Training group 11, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([209, 199]))
	Y Val Labels:(array([0.], dtype=float32), array([135]))
Training group 12, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([637]))
	Y Val Labels:(array([1.], dtype=float32), array([636]))
Training group 12, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1273]))
	Y Val Labels:(array([1.], dtype=float32), array([636]))
Training group 12, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1909]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([324, 312]))
Training group 13, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([ 93, 281]))
	Y Val Labels:(array([0.], dtype=float32), array([374]))
Training group 13, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([467, 281]))
	Y Val Labels:(array([0.], dtype=float32), array([374]))
Training group 13, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([841, 281]))
	Y Val Labels:(array([0.], dtype=float32), array([374]))
Training group 14, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([500]))
	Y Val Labels:(array([1.], dtype=float32), array([497]))
Training group 14, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([997]))
	Y Val Labels:(array([1.], dtype=float32), array([497]))
Training group 14, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1494]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([299, 198]))
Training group 15, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([261]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([ 22, 238]))
Training group 15, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([ 22, 499]))
	Y Val Labels:(array([0.], dtype=float32), array([260]))
Training group 15, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([282, 499]))
	Y Val Labels:(array([0.], dtype=float32), array([260]))
Training group 16, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([78]))
	Y Val Labels:(array([1.], dtype=float32), array([77]))
Training group 16, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([155]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([ 7, 70]))
Training group 16, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([  7, 225]))
	Y Val Labels:(array([0.], dtype=float32), array([77]))
Training group 17, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([121,  29]))
	Y Val Labels:(array([0.], dtype=float32), array([150]))
Training group 17, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([271,  29]))
	Y Val Labels:(array([0.], dtype=float32), array([150]))
Training group 17, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([421,  29]))
	Y Val Labels:(array([0.], dtype=float32), array([150]))
Training group 18, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([546]))
	Y Val Labels:(array([1.], dtype=float32), array([544]))
Training group 18, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1090]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([  9, 535]))
Training group 18, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([   9, 1625]))
	Y Val Labels:(array([0.], dtype=float32), array([544]))
Training group 19, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([330]))
	Y Val Labels:(array([1.], dtype=float32), array([327]))
Training group 19, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([657]))
	Y Val Labels:(array([1.], dtype=float32), array([327]))
Training group 19, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([984]))
	Y Val Labels:(array([1.], dtype=float32), array([327]))
Training group 20, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([ 2, 59]))
	Y Val Labels:(array([0.], dtype=float32), array([58]))
Training group 20, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([60, 59]))
	Y Val Labels:(array([0.], dtype=float32), array([58]))
Training group 20, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([118,  59]))
	Y Val Labels:(array([0.], dtype=float32), array([58]))
Training group 21, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([253]))
	Y Val Labels:(array([1.], dtype=float32), array([250]))
Training group 21, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([503]))
	Y Val Labels:(array([1.], dtype=float32), array([250]))
Training group 21, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([753]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([ 59, 191]))
Training group 22, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([319]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([206, 112]))
Training group 22, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([206, 431]))
	Y Val Labels:(array([0.], dtype=float32), array([318]))
Training group 22, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([524, 431]))
	Y Val Labels:(array([0.], dtype=float32), array([318]))
Training group 23, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([0.], dtype=float32), array([15]))
	Y Val Labels:(array([0.], dtype=float32), array([12]))
Training group 23, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([0.], dtype=float32), array([27]))
	Y Val Labels:(array([0.], dtype=float32), array([12]))
Training group 23, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0.], dtype=float32), array([39]))
	Y Val Labels:(array([0.], dtype=float32), array([12]))
Training group 24, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([457]))
	Y Val Labels:(array([1.], dtype=float32), array([455]))
Training group 24, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([912]))
	Y Val Labels:(array([1.], dtype=float32), array([455]))
Training group 24, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1367]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([266, 189]))
Training group 25, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([356]))
	Y Val Labels:(array([1.], dtype=float32), array([355]))
Training group 25, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([711]))
	Y Val Labels:(array([0., 1.], dtype=float32), array([129, 226]))
Training group 25, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([0., 1.], dtype=float32), array([129, 937]))
	Y Val Labels:(array([0.], dtype=float32), array([355]))
Training group 26, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([247]))
	Y Val Labels:(array([1.], dtype=float32), array([247]))
Training group 26, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([494]))
	Y Val Labels:(array([1.], dtype=float32), array([247]))
Training group 26, split 3
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([741]))
	Y Val Labels:(array([1.], dtype=float32), array([247]))
Training group 27, split 1
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([1027]))
	Y Val Labels:(array([1.], dtype=float32), array([1027]))
Training group 27, split 2
	Early stopping at epoch 13
	Y Train Labels:(array([1.], dtype=float32), array([2054]))
	Y Val Labels:(array([1.], dtype=float32), array([1027]))
Training group 27, split 3
